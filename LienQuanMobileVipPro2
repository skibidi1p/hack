print('fuxk')

if not game:IsLoaded() then
    game.Loaded:Wait()
end
local fask = task
setreadonly(fask, false)

local RunService = game:GetService("RunService")
local myWait = function(n)
    if not n then
        return RunService.Heartbeat:Wait()
    else
        local lasted = 0
        repeat
            lasted = lasted + RunService.Heartbeat:Wait()
        until lasted >= n
        return lasted
    end
end
fask.wait = myWait

local id = game.PlaceId
if id == 2753915549 then
    World1 = true;
elseif id == 4442272183 then
    World2 = true;
elseif id == 7449423635 then
    World3 = true;
else
    game:Shutdown()
end

do -- Team Script
    repeat
        ChooseTeam = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("ChooseTeam", true)
        UIController = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("UIController", true)
        if UIController and ChooseTeam then
            if ChooseTeam.Visible then
                for i, v in pairs(getgc()) do
                    if type(v) == "function" and getfenv(v).script == UIController then
                        local constant = getconstants(v)
                        pcall(function()
                            if constant[1] == "Pirates" and #constant == 1 then
                                v(shared.Team or "Pirates")
                            end
                        end)
                    end
                end
            end
        end
        wait(1)
    until game.Players.LocalPlayer.Team
    repeat
        wait()
    until game.Players.LocalPlayer.Character
end

local SettingsGameData = {}

xpcall(function()
    if not isfolder("luxury scripts/ID/" .. game.GameId) then
        if syn then
            makefolder("luxury scripts/ID/" .. game.GameId)
            writefile("luxury scripts/ID/" .. game.GameId .. "/" .. game.Players.LocalPlayer.Name .. ".lua",
                game:GetService("HttpService"):JSONEncode(SettingsGameData));
        else
            makefolder("luxury scripts")
            makefolder("luxury scripts/ID")
            makefolder("luxury scripts/ID/" .. game.GameId)
            writefile("luxury scripts/ID/" .. game.GameId .. "/" .. game.Players.LocalPlayer.Name .. ".lua",
                game:GetService("HttpService"):JSONEncode(SettingsGameData));
        end
    end
    SettingsGameData = game:GetService("HttpService"):JSONDecode(readfile(
        "luxury scripts/ID/" .. game.GameId .. "/" .. game.Players.LocalPlayer.Name .. ".lua"));
end, function()
end)
-- [[ Marco Luraph For Fix Lags ]]
if not LPH_OBFUSCATED then
    LPH_JIT_MAX = (function(...)
        return ...
    end)
    LPH_NO_VIRTUALIZE = (function(...)
        return ...
    end)
    LPH_NO_UPVALUES = (function(...)
        return ...
    end)
end

-- [Anti AFK]

for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
    v:Disable()
end

-- [Functions Equip Weapon]

function EquipWeapon(...)
    local Get = {...}
    if Get[1] and Get[1] ~= "" then
        if game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(Get[1])) then
            local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(tostring(Get[1]))
            fask.wait()
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
        end
    else
        spawn(function()
            for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v:IsA("Tool") then
                    if v.ToolTip == "Melee" then
                        ToolSe = v.Name
                    end
                end
            end
            for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                if v:IsA("Tool") then
                    if v.ToolTip == "Melee" then
                        ToolSe = v.Name
                    end
                end
            end
            if game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe) then
                local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(ToolSe)
                fask.wait()
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
            end
        end)
    end
end

function EquipWeaponSword()
    pcall(function()
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v.ToolTip == "Sword" and v:IsA('Tool') then
                local ToolHumanoid = game.Players.LocalPlayer.Backpack:FindFirstChild(v.Name)
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(ToolHumanoid)
            end
        end
    end)
end

-- [Noclip]

LPH_NO_VIRTUALIZE(function()
    fask.spawn(function()
        game:GetService("RunService").Stepped:Connect(function()
            pcall(function()
                if NoClip or FarmLv or Auto_New_World or Auto_Saber or Auto_Pole or _G.BringFound or
                    Auto_All_Sword_Mastery or autokillafter or AutoTradeEmber or Auto_Third_Sea or Auto_Bartilo_Quest or
                    Auto_Dark_Coat or Auto_Swan_Glasses or Auto_Color_Summon or Auto_Franky or AutoLookAwake or
                    AutoLeverGear or AutoPullFuly or Auto_Rengoku or Auto_Ectoplasm or AutoObservation or TpPlr or
                    -- [World 3]
                    Auto_Rainbow_Haki or Auto_Farm_Elite_Hunter or Auto_Kill_Law or Auto_Musketeer_Hat or
                    Auto_Buddy_Sword or Farm_Bone or Auto_Observation_V2 or Auto_Godhuman or Auto_Cavender or
                    Terrorshark or Auto_Serpent_Bow or _G.Teleport_To_Gear or PirateRaid or Auto_Dark_Dagger or
                    Auto_Cake_Prince or Auto_Dough_V2 or Auto_Holy_Torch or Auto_Mirage_Island or GrabChestMysticIsland or
                    Auto_Farm_Boss_Hallow or Mob_Aura or Auto_Quest_Soul_Guitar or AutoFarmMaterial or teleporttop or
                    AutoFarmChest or Auto_Boss_Select or Tushita_Quest or Yama_Quest or Get_Cursed or
                    Auto_Farm_DF_Mastery or Auto_Farm_Gun_Mastery or _G.Auto_Farm_Sword_Mastery or _G.AutoPullLever or
                    _G.AncientQuest or _G.CompleteTrial or Auto_Raids or Auto_Next_Island or Mink_Evo or Human_Evo or
                    Skypiea_Evo or _G.Fishman_Evo then
                    if syn then
                        setfflag("HumanoidParallelRemoveNoPhysics", "False")
                        setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
                        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                        if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
                            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
                        end
                    else
                        if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                            if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild(
                                "BodyVelocity1") then
                                if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
                                    game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
                                end
                                local BodyVelocity = Instance.new("BodyVelocity")
                                BodyVelocity.Name = "BodyVelocity1"
                                BodyVelocity.Parent = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                                BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                                BodyVelocity.Velocity = Vector3.new(0, 0, 0)
                            end
                        end
                        for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                            if v:IsA("BasePart") then
                                v.CanCollide = false
                            end
                        end
                    end
                else
                    if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
                        game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy();
                    end
                end
            end)
        end)
    end)
end)()

-- [Bring Mob]
LPH_NO_VIRTUALIZE(function()
    fask.spawn(function()
        while wait() do
            if setscriptable then
                setscriptable(game.Players.LocalPlayer, "SimulationRadius", true)
            end
            if sethiddenproperty then
                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
            end
        end
    end)
end)()

function InMyNetWork(object)
    if isnetworkowner then
        return isnetworkowner(object)
    else
        if (object.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then
            return true
        end
        return false
    end
end

spawn(function()
    game:GetService("RunService").RenderStepped:Connect(function()
        pcall(function()
            if StartMagnet then
                for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if not string.find(v.Name, "Boss") and
                        (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <=
                        500 then
                        if InMyNetWork(v.HumanoidRootPart) then
                            v.HumanoidRootPart.CFrame = PosMon
                            v.Humanoid.JumpPower = 0
                            v.Humanoid.WalkSpeed = 0
                            v.HumanoidRootPart.Size = Vector3.new(60, 60, 60)
                            v.HumanoidRootPart.CanCollide = false
                            v.Head.CanCollide = false
                            v.Humanoid:ChangeState(14)
                            v.Humanoid:ChangeState(11)
                        end
                    end
                end
            end
        end)
    end)
end)

LPH_NO_VIRTUALIZE(function()
    fask.spawn(function()
        if game.Players.LocalPlayer.Character:FindFirstChild("Stun") then
            game.Players.LocalPlayer.Character.Stun.Changed:connect(function()
                pcall(function()
                    if game.Players.LocalPlayer.Character:FindFirstChild("Stun") then
                        game.Players.LocalPlayer.Character.Stun.Value = 0
                    end
                end)
            end)
        end
    end)
end)()

LPH_JIT_MAX(function()
    fask.spawn(function()
        while wait() do
            for i, v in pairs(game:GetService("Workspace")["_WorldOrigin"]:GetChildren()) do
                pcall(function()
                    if v.Name == ("CurvedRing") or v.Name == ("SlashHit") or v.Name == ("SwordSlash") or v.Name ==
                        ("SlashTail") or v.Name == ("Sounds") then
                        v:Destroy()
                    end
                end)
            end
        end
    end)
end)()

local TableSwapMob = {}
local AllMobCFrame = {}
local SwapMobNoLoop = false

local function tableFoundForYou(tableToSearch, cframeToFind)
    for _, v in pairs(tableToSearch) do
        if v.CFrame == cframeToFind then
            return true
        end
    end
    return false
end

local function updateAllMobCFrame()
    while fask.wait(0.5) do
        pcall(function()
            for _, v in pairs(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()) do
                if not tableFoundForYou(AllMobCFrame, v.CFrame) then
                    table.insert(AllMobCFrame, {
                        Name = v.Name,
                        CFrame = v.CFrame
                    })
                end
            end
        end)
    end
end

spawn(updateAllMobCFrame)

local function checkEnemySpawn(name)
    local returnCFrame
    local tableCFrame = {}

    for _, v in pairs(AllMobCFrame) do
        if name == v.Name or name:match("^" .. v.Name) then
            local newCFrame = v.CFrame * CFrame.new(2, 50, 0)
            table.insert(tableCFrame, newCFrame)
        end
    end

    for _, v in pairs(tableCFrame) do
        if not table.find(TableSwapMob, v) then
            if not SwapMobNoLoop then
                SwapMobNoLoop = true
                delay(0.8, function()
                    table.insert(TableSwapMob, v)
                    SwapMobNoLoop = false
                end)
            end
            return v
        end
    end

    delay(0.01, function()
        TableSwapMob = {}
    end)

    if #TableSwapMob > 0 then
        return TableSwapMob[1]
    end

    local function findEnemy(searchName)
        for _, obj in pairs(game:GetService("CollectionService"):GetTagged("ActiveRig")) do
            if obj.Name == searchName and obj:FindFirstChild("Humanoid") and obj:FindFirstChild("HumanoidRootPart") and
                obj.Humanoid.Health > 0 then
                return obj.HumanoidRootPart.CFrame * CFrame.new(2, 50, 0)
            end
        end
    end

    return findEnemy(name) or findEnemy(name, game:GetService("ReplicatedStorage"))
end

if game:GetService("ReplicatedStorage").Effect.Container:FindFirstChild("Death") then
    game:GetService("ReplicatedStorage").Effect.Container.Death:Destroy()
end
if game:GetService("ReplicatedStorage").Effect.Container:FindFirstChild("Respawn") then
    game:GetService("ReplicatedStorage").Effect.Container.Respawn:Destroy()
end

local function RemoveSpaces(str)
    return str:gsub(" Fruit", "")
end

function Com(com, ...)
    local Remote = game:GetService('ReplicatedStorage').Remotes:FindFirstChild("Comm" .. com)
    if Remote:IsA("RemoteEvent") then
        Remote:FireServer(...)
    elseif Remote:IsA("RemoteFunction") then
        Remote:InvokeServer(...)
    end
end

-- [Tween Functions]

function toAroundTarget(CF)
    if TeleportType == 1 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF * CFrame.new(0, 30, 1)
    elseif TeleportType == 2 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF * CFrame.new(0, 1, 30)
    elseif TeleportType == 3 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF * CFrame.new(1, 1, -30)
    elseif TeleportType == 4 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF * CFrame.new(30, 1, 0)
    elseif TeleportType == 5 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF * CFrame.new(-30, 1, 0)
    else
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CF * CFrame.new(0, 30, 1)
    end
end

function GetIsLandNer(...)

    local RealtargetPos = {...}
    local targetPos = RealtargetPos[1]
    local RealTarget
    if type(targetPos) == "vector" then
        RealTarget = targetPos
    elseif type(targetPos) == "userdata" then
        RealTarget = targetPos.Position
    elseif type(targetPos) == "number" then
        RealTarget = CFrame.new(unpack(RealtargetPos))
        RealTarget = RealTarget.p
    end

    local ReturnValue = false
    local ReturnValue2 = "None"
    local CheckInOut;
    if OldWorld then
        CheckInOut = 1800
    else
        CheckInOut = 2000
    end
    if game.Players.LocalPlayer.Team then
        for i, v in pairs(game.Workspace._WorldOrigin.PlayerSpawns:FindFirstChild(
            tostring(game.Players.LocalPlayer.Team)):GetChildren()) do
            local ReMagnitude = (RealTarget - v:GetModelCFrame().p).Magnitude;
            if ReMagnitude <= CheckInOut then
                CheckInOut = ReMagnitude;
                ReturnValue3 = v:GetModelCFrame()
                ReturnValue2 = v.Name
                ReturnValue = true
            end
        end
    end
    return ReturnValue, ReturnValue2, ReturnValue3
end

_F = LPH_NO_VIRTUALIZE(function(a, b, c, d, e)
    local args = {a, b, c, d, e}
    if tostring(args[1]):find("Buy") then
        if not Root then
            return
        else
            fask.wait()
        end
    end
    local Remote = game:GetService('ReplicatedStorage').Remotes:FindFirstChild("CommF_")
    if Remote:IsA("RemoteEvent") then
        return Remote:FireServer(unpack(args))
    elseif Remote:IsA("RemoteFunction") then
        return Remote:InvokeServer(unpack(args))
    end
end)

-- [Functions Click]
LPH_NO_VIRTUALIZE(function()
    function Click()
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
    end
end)()
-- [Check Fruit 1M]

_G.CheckFruitLocal1M = false

LPH_JIT_MAX(function()
    function CheckFruit1M()
        for i, v in pairs(game.ReplicatedStorage:WaitForChild("Remotes").CommF_:InvokeServer("getInventoryFruits")) do
            if v.Price >= 1000000 then
                _G.CheckFruitLocal1M = true
            end
        end
    end
end)()

-- [[ Server Api ]]

local ServerFunc =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/NightsTimeZ/Api/main/Crypto-BitCoin-Gen"))()

function GetFightingStyle(Style)
    ReturnText = ""
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v:IsA("Tool") then
            if v.ToolTip == Style then
                ReturnText = v.Name
            end
        end
    end
    for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("Tool") then
            if v.ToolTip == Style then
                ReturnText = v.Name
            end
        end
    end
    if ReturnText ~= "" then
        return ReturnText
    else
        return "Not Have"
    end
end

-- [CheckMasteryWeapon]

function CheckMasteryWeapon(NameWe, MasNum)
    if game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe) then
        if tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
            return "true DownTo"
        elseif tonumber(game.Players.LocalPlayer.Backpack:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
            return "true UpTo"
        end
    end
    if game.Players.LocalPlayer.Character:FindFirstChild(NameWe) then
        if tonumber(game.Players.LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) < tonumber(MasNum) then
            return "true DownTo"
        elseif tonumber(game.Players.LocalPlayer.Character:FindFirstChild(NameWe).Level.Value) >= tonumber(MasNum) then
            return "true UpTo"
        end
    end
    return "else"
end

local function myboat()
    for i, v in pairs(game:GetService("Workspace").Boats:GetChildren()) do
        if v:FindFirstChild("Owner") then
            if tostring(v.Owner.Value) == game.Players.LocalPlayer.Name then
                return v:FindFirstChildOfClass("VehicleSeat")
            end
        end
    end
    return false
end

local function CheckSeabeast()
    for i, v in pairs(game.Workspace.SeaBeasts:GetChildren()) do
        if v:FindFirstChild("HumanoidRootPart") then
            return v
        end
    end
    return false
end

function CheckPirateBoat()
    for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
        if v.Name == "PirateBasic" or v.Name == "PirateBrigade" then
            return true
        end
    end
    return false
end

-- [GetWeaponInventory]

function GetWeaponInventory(Weaponname)
    for i, v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
        if type(v) == "table" then
            if v.Type == "Sword" then
                if v.Name == Weaponname then
                    return true
                end
            end
        end
    end
    return false
end

-- [GetMaterial]

function GetMaterial(matname)
    for i, v in pairs(game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("getInventory")) do
        if type(v) == "table" then
           
